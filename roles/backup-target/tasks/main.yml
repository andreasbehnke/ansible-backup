---
  - name: add backup user
    become: yes
    user: 
      name: "{{backup_target_user}}"
      group: "{{backup_target_user}}"
      home: "{{backup_target_user_home}}"

  - name: ensure directory containing key files for mobile clients
    file:
      path: "{{backup_target_keys_path}}"
      mode: "0600"
      owner: "{{backup_target_user}}"
      state: "directory"

  - name: collect private key file names
    set_fact:
      backup_target_key_files: "{{backup_target_key_files}} + [ '{{ item }}' ]"
    with_items: "{{ backup_target_access_authorized_users }}"

  - name: collect public key file names
    set_fact:
      backup_target_key_files: "{{backup_target_key_files}} + [ '{{ item }}.pub' ]"
    with_items: "{{ backup_target_access_authorized_users }}"

  - name: collect dropbear key file names
    set_fact:
      backup_target_key_files: "{{backup_target_key_files}} + [ '{{ item }}.dropbear.pub' ]"
    with_items: "{{ backup_target_access_authorized_users }}"
  
  - name: collect list of key files
    shell: "ls -1 {{backup_target_keys_path}}"
    register: backup_target_existing_key_files
    changed_when: False
  
  - name: delete outdated key files not in list
    become: yes
    file: path="{{ backup_target_keys_path }}/{{ item }}" state=absent
    with_items: "{{ backup_target_existing_key_files.stdout_lines }}"
    when: item not in backup_target_key_files

 # - name: install dopbear bin package to get dropbearconvert command
 #   become: yes
 #   apt: name=dropbear-bin state=present
#

#  - name: add authorized keys
#    become: yes
#    authorized_key: user=backup key="{{ lookup('file', '{{ remote_access_authorized_keys_prefix }}/{{ item }}.pub') }}"
#    with_items: "{{ backup_target_access_authorized_users }}"

# TODO: usage of rrsync for secure connection.